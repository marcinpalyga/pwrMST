1. 
from scipy.integrate import odeint
odeint(func, y0, t, args=(beta , sigma, gamma))
y0 - warunki poczatkowe [S0, E0, I0, R0]
t -wektor czasu numpy.linspace(a,b,n)
func(y, t, args=()) -> [dS/dt, dE/dt, dI/dt, dR/dt]
y = [S,E,I,R]
sol = odeint(...)
sys.argv[1:]
2. 
import argparse
parse = argparse.ArgumentParser()
parser.add_argument('-s', default = 100, type = float)
seir(**vars(args))
4.import networkx as nx 
g= nx.fast_gnp_random_graph(n,p)
nx.draw(g, node_color= colors)
g.neighbors(node)
matplotlib savefig
imageio mimsave
pillow 

